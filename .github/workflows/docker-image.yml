name: Docker Image CI

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-24.04
    outputs:
      image_date: ${{ steps.date.outputs.image_date }}
      release_tag: ${{ steps.release.outputs.release_tag }}
    steps:
    - name: Set build date for image tagging
      id: date
      run: echo "image_date=$(date +'%Y.%m.%d')" >> "$GITHUB_OUTPUT"
    
    - name: Get release tag
      id: release
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "release_tag=${{ github.event.release.tag_name }}" >> "$GITHUB_OUTPUT"
        else
          echo "release_tag=latest" >> "$GITHUB_OUTPUT"
        fi
      
    - name: Checkout repository
      uses: actions/checkout@v4.0.0
    
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: image=moby/buildkit:latest
    
    - name: Set build args for release
      id: build_args
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "ROON_PACKAGE_URI=https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/RoonServer_linuxx64.tar.bz2" >> "$GITHUB_OUTPUT"
        else
          echo "ROON_PACKAGE_URI=http://download.roonlabs.com/builds/RoonServer_linuxx64.tar.bz2" >> "$GITHUB_OUTPUT"
        fi
    
    - name: Docker build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: false
        build-args: |
          ROON_PACKAGE_URI=${{ steps.build_args.outputs.ROON_PACKAGE_URI }}
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/roon-server:${{ steps.date.outputs.image_date }}
          ${{ secrets.DOCKERHUB_USERNAME }}/roon-server:${{ steps.release.outputs.release_tag }}
          ${{ secrets.DOCKERHUB_USERNAME }}/roon-server:${{ github.sha }}
    
    - name: Docker compose build (only for non-release builds)
      if: github.event_name != 'release'
      run: docker compose build

  push:
    needs: build
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' || github.event_name == 'release'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.0.0
    
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: image=moby/buildkit:latest
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set build args for release
      id: build_args
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "ROON_PACKAGE_URI=https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/RoonServer_linuxx64.tar.bz2" >> "$GITHUB_OUTPUT"
        else
          echo "ROON_PACKAGE_URI=http://download.roonlabs.com/builds/RoonServer_linuxx64.tar.bz2" >> "$GITHUB_OUTPUT"
        fi
    
    - name: Docker build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        build-args: |
          ROON_PACKAGE_URI=${{ steps.build_args.outputs.ROON_PACKAGE_URI }}
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/roon-server:${{ needs.build.outputs.image_date }}
          ${{ secrets.DOCKERHUB_USERNAME }}/roon-server:${{ needs.build.outputs.release_tag }}
          ${{ secrets.DOCKERHUB_USERNAME }}/roon-server:${{ github.sha }}